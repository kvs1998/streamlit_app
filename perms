-- *** Step 1: Identify the Role Owning/Running the Task/Procedure ***
-- If your task is owned by 'MY_TASK_ROLE':
USE ROLE ACCOUNTADMIN; -- Or a role with MANAGE GRANTS
GRANT USAGE ON DATABASE YOUR_DB TO ROLE MY_TASK_ROLE;
GRANT USAGE ON SCHEMA YOUR_DB.YOUR_SCHEMA TO ROLE MY_TASK_ROLE;
GRANT USAGE ON WAREHOUSE YOUR_WAREHOUSE_NAME TO ROLE MY_TASK_ROLE; -- If using user-managed warehouse for task

-- *** Step 2: Grant access to ACCOUNT_USAGE (Most Likely Cause) ***
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE MY_TASK_ROLE;
-- OR: GRANT SELECT ON FUTURE VIEWS IN SCHEMA SNOWFLAKE.ACCOUNT_USAGE TO ROLE MY_TASK_ROLE; -- More granular but IMPRIVILEGES is common

-- *** Step 3: Grant privileges on your custom audit table ***
GRANT INSERT, SELECT ON TABLE YOUR_DB.YOUR_SCHEMA.T_DT_COLLECTION_AUDIT_LOG TO ROLE MY_TASK_ROLE;

-- *** Step 4: Grant privileges on final merge target tables ***
-- Assuming they are T_DYNAMIC_TABLE_REFRESH_HISTORY_FLAT, T_DYNAMIC_TABLE_METADATA_LATEST_SNAPSHOT, T_DYNAMIC_TABLE_TRACKING
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLE YOUR_DB.YOUR_SCHEMA.T_DYNAMIC_TABLE_REFRESH_HISTORY_FLAT TO ROLE MY_TASK_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLE YOUR_DB.YOUR_SCHEMA.T_DYNAMIC_TABLE_METADATA_LATEST_SNAPSHOT TO ROLE MY_TASK_ROLE;
GRANT SELECT, INSERT, UPDATE, DELETE ON TABLE YOUR_DB.YOUR_SCHEMA.T_DYNAMIC_TABLE_TRACKING TO ROLE MY_TASK_ROLE;

-- *** Step 5: Grant privileges for creating TEMPORARY tables (DB-level) ***
-- TEMPORARY tables are created in the current schema. Role needs CREATE TABLE.
GRANT CREATE TABLE ON SCHEMA YOUR_DB.YOUR_SCHEMA TO ROLE MY_TASK_ROLE;

-- *** Step 6: Grant USAGE on child stored procedures ***
GRANT USAGE ON PROCEDURE YOUR_DB.YOUR_SCHEMA.SP_COLLECT_DT_REFRESH_HISTORY(VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR) TO ROLE MY_TASK_ROLE;
GRANT USAGE ON PROCEDURE YOUR_DB.YOUR_SCHEMA.SP_COLLECT_DYNAMIC_TABLE_METADATA(VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR, VARCHAR) TO ROLE MY_TASK_ROLE;
-- Note: Replace argument types with actual types of your SPs if they differ.

-- *** Step 7: Grant EXECUTE TASK privilege (account level for tasks) ***
GRANT EXECUTE TASK ON ACCOUNT TO ROLE MY_TASK_ROLE;
-- OR if your task uses serverless compute:
GRANT EXECUTE MANAGED TASK ON ACCOUNT TO ROLE MY_TASK_ROLE;
